<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="../styles/common.css">
    <link rel="stylesheet" type="text/css" href="../styles/add-movie-container.css">
    <link rel="stylesheet" type="text/css" href="../styles/users-container.css">
    <link rel="stylesheet" type="text/css" href="../styles/panel-container.css">
    <link rel="stylesheet" type="text/css" href="../styles/movie-details.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <title rel="shortcut icon">üòä Movie Reviews</title>
    <link rel="shortcut icon" href="../res/logo.png" />
</head>
<body>


<div class="top-bar">
    <div class="logo">Êò†ÁîªÊâπË©ï</div>
    <nav>
        <button class="menu-button" id="main" onclick="navigateTo('/')">–ì–ª–∞–≤–Ω–æ–µ</button>
        <button class="menu-button" id="favorites" onclick="navigateTo('/favorites')">–ú–æ—ë</button>
        <% if (session.user && session.user.id === 1) { %>
            <button class="menu-button active" id="panel" onclick="navigateTo('/panel')">–ü–∞–Ω–µ–ª—å</button>
        <% } %>
        <button class="menu-button" id="search" onclick="navigateTo('/search')">–ü–æ–∏—Å–∫</button>
        <button class="menu-button" id="profile" onclick="navigateTo('/profile')">–ü—Ä–æ—Ñ–∏–ª—å</button>
    </nav>
</div>

<div class="panel-container">
    <div class="statistic-container">
        <h2 class="statistic-name">–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <div class="statistic-information">
            <canvas id="movieChart" width="800" height="400"></canvas>
        </div>
    </div>

    <div class="add-movie-container">
        <h2 class="add-movie-name">–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º</h2>
        <form class="movie-form-add">
            <div class="movie-form-main-information">
                <div class="movie-form-upload-section" id="upload-section">
                    <span class="movie-form-drag-n-drop-text" id="js-drag-n-drop">
                        –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ—Å—Ç–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ jpg
                    </span>
                    <input type="file" name="poster" id="file-input" accept="image/jpeg" style="display: none;">
                    <button type="button" class="movie-form-accept-upload-image" onclick="document.getElementById('file-input').click();">
                        –ó–∞–≥—Ä—É–∑–∏—Ç—å
                    </button>
                </div>
                <div class="movie-form-add-text">
                    <input class="movie-form-title" type="text" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ">
                    <input class="movie-form-director" type="text" placeholder="–†–µ–∂–∏—Å—Å–µ—Ä">
                    <input class="movie-form-country" type="text" placeholder="–°—Ç—Ä–∞–Ω–∞">
                    <input class="movie-form-year" type="text" placeholder="–ì–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è">
                </div>
            </div>
            <textarea class="movie-form-description" placeholder="–¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è(—Å–∏–Ω–æ–ø—Å–∏—Å–∞)"></textarea>
            <div class="error-message" id="errorMessage"></div>
            <div class="movie-form-buttons">
                <button type="button" class="movie-form-cancel">–û—Ç–º–µ–Ω–∞</button>
                <button type="submit" class="movie-form-accept">–ì–æ—Ç–æ–≤–æ</button>
            </div>
        </form>

    </div>
    <div class="users-container">
        <h2 class="users-name">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
        <table class="users-table">
            <tr>
                <th>ID</th>
                <th>Username</th>
                <th>–§–∞–º–∏–ª–∏—è –ò–º—è</th>
            </tr>
            <% users.forEach(function(user) { %>
                <tr>
                    <td><%= user.id %></td>
                    <td><%= user.username %></td>
                    <td><%= user.name %></td>
                </tr>
            <% }); %>
        </table>
    </div>
</div>



<footer>
    <div class="footer">
        <a class="git-button" id="github" href="https://github.com/eyonyann/Course-project-3" target="_blank">GitHub</a>
    </div>
</footer>

<script>


    const sadSmiley = 'üòû';

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∫–∏
    function handleVisibilityChange() {
        if (document.hidden) {
            document.title = sadSmiley + ' Movie Reviews'; // –ò–∑–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞ –≥—Ä—É—Å—Ç–Ω—ã–π —Å–º–∞–π–ª–∏–∫
        } else {
            document.title = 'üòä Movie Reviews'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∫–ª–∞–¥–∫–∏
        }
    }

    function navigateTo(url) {
        window.location.href = url;
    }



    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.movie-form-add');
        const fileInput = document.getElementById('file-input');
        const uploadSection = document.getElementById('upload-section');
        let imageData;

        fileInput.addEventListener('change', function(event) {
            if (event.target.files.length > 0) {
                const file = event.target.files[0];
                const reader = new FileReader();

                reader.onload = function(e) {
                    imageData = e.target.result;
                    let imageElement = document.createElement('img');
                    if (!imageElement) {
                        imageElement = document.createElement('img');
                        uploadSection.appendChild(imageElement);
                    }
                    imageElement.src = e.target.result;
                    imageElement.style.cursor = 'pointer'; // Change cursor to pointer when over the image
                    imageElement.onclick = function() { // Add click event to trigger file input
                        fileInput.click();
                    };
                    uploadSection.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–µ–∫—Ü–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    uploadSection.appendChild(imageElement);
                };

                reader.readAsDataURL(file);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        form.addEventListener('submit', async function(event) {
            event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
            const submitButton = event.submitter;

            if (submitButton.classList.contains('movie-form-accept')) {
                isSubmitted = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã

                const title = document.querySelector('.movie-form-title').value;
                const director = document.querySelector('.movie-form-director').value;
                const country = document.querySelector('.movie-form-country').value;
                const year = document.querySelector('.movie-form-year').value;
                const description = document.querySelector('.movie-form-description').value;

                const errorMessage = document.getElementById('errorMessage');
                errorMessage.textContent = ''; // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏

                // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
                // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
                if (isSubmitted) {
                    if (uploadSection.querySelector('img') === null) {
                        errorMessage.textContent = '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ—Å—Ç–µ—Ä.';
                    }
                    if (!/^[–ê-–ØA-Z][–∞-—è–ê-–Ø—ë–Åa-zA-Z0-9\s,-]*$/.test(title)) {
                        errorMessage.textContent += '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã –∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã. ';
                    }
                    if (!/^[–ê-–Ø][–∞-—è]*\s[–ê-–Ø][–∞-—è]*(\s[–ê-–Ø][–∞-—è]*)*$/.test(director)) {
                        errorMessage.textContent += '–†–µ–∂–∏—Å—Å–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –∫–∞–∫ –º–∏–Ω–∏–º—É–º –¥–≤—É–º—è —Å–ª–æ–≤–∞–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∫–∞–∂–¥–æ–µ —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã. ';
                    }
                    if (!/^[–ê-–ØA-Z][–∞-—è–ê-–Ø—ë–Å\s,-]*(?:\([–ê-–ØA-Z]+\))?(?:,\s*[–ê-–ØA-Z][–∞-—è–ê-–Ø—ë–Å\s,-]*)*$/.test(country)) {
                        errorMessage.textContent += '–°—Ç—Ä–∞–Ω–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã. ';
                    }
                    if (!/^\d{4}$/.test(year) || year < 1800 || year >= 2024) {
                        errorMessage.textContent += '–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1800 –¥–æ 2024. ';
                    }
                    if (description.trim() === '') {
                        errorMessage.textContent += '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º. ';
                    }

                    if (errorMessage.textContent === '') {
                        try {
                            // –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å–º–∞
                            const formData = new FormData();
                            formData.append('title', title);
                            formData.append('director', director);
                            formData.append('country', country);
                            formData.append('year', year);
                            formData.append('description', description);
                            formData.append('poster', imageData);



                            // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                            const response = await fetch('/panel', {
                                method: 'POST',
                                body: formData
                            });

                            if (response.ok) {

                            } else {
                                // –ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                errorMessage.textContent = formData.size ;
                            }


                        } catch (error) {
                            console.error('Failed to save movie:', error);
                            // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            errorMessage.textContent = error;
                        }
                    }
                }
            }
        });


        document.querySelector('.movie-form-cancel').addEventListener('click', function() {
            form.reset();
            uploadSection.innerHTML = `<span class="movie-form-drag-n-drop-text" id="js-drag-n-drop">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ—Å—Ç–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ jpg
        </span>
        <button class="movie-form-accept-upload-image" onclick="document.getElementById('file-input').click();">
            –ó–∞–≥—Ä—É–∑–∏—Ç—å
        </button>`;
        });
    });




    document.addEventListener('DOMContentLoaded', function() {
        var ctx = document.getElementById('movieChart')?.getContext('2d');
        if (!ctx) {
            console.error('Canvas context is null.');
            return;
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ movieDates –∏ movieCounts
        let movieDates = [];
        let movieCounts = [];

        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ movies
        <%
        const dateCountsMap = {};
        movies.forEach(movie => {
            const date = new Date(movie.dateAdded).toISOString().slice(0, 10); // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ñ–æ—Ä–º–∞—Ç—É YYYY-MM-DD
            if (!dateCountsMap[date]) {
                dateCountsMap[date] = 0;
            }
            dateCountsMap[date]++;
        });

        Object.keys(dateCountsMap).forEach(date => {
        %>
        movieDates.push('<%= date %>'); // –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–∞–≤—ã—á–∫–∏ –≤–æ–∫—Ä—É–≥ –¥–∞—Ç—ã
        movieCounts.push(<%= dateCountsMap[date] %>); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∫–∞–≤—ã—á–µ–∫
        <%});%>

        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: movieDates,
                datasets: [{
                    label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤',
                    data: movieCounts,
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        type: 'time',
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ –ø–æ –æ—Å–∏ x
                        }
                    }],
                    yAxes: [{
                        gridLines: {
                            display: false // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ –ø–æ –æ—Å–∏ y
                        }
                    }]
                }
            }
        });
    });









</script>

</body>
</html>
